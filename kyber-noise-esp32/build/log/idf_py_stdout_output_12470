Command: ninja all
[1/12] Linking C static library esp-idf/kyber/libkyber.a
[2/12] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[3/12] Performing build step for 'bootloader'
[1/1] cd /home/marcos/esp/kyber-esp32/build/bootloader && /home/marcos/.espressif/python_env/idf6.0_py3.12_env/bin/python /home/marcos/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/marcos/esp/kyber-esp32/build/bootloader/bootloader.bin
Bootloader binary size 0x5250 bytes. 0x2db0 bytes (36%) free.
[4/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/hello.c.obj
[5/12] No install step for 'bootloader'
[6/12] Linking C static library esp-idf/main/libmain.a
[7/12] Completed 'bootloader'
[8/12] Generating esp-idf/esp_system/ld/sections.ld
[9/12] Building C object CMakeFiles/kyber-esp32.elf.dir/project_elf_src_esp32s3.c.obj
[10/12] Linking CXX executable kyber-esp32.elf
[11/12] Generating binary image from built executable
esptool.py v4.9.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/marcos/esp/kyber-esp32/build/kyber-esp32.bin
[12/12] cd /home/marcos/esp/kyber-esp32/build && /home/marcos/.espressif/python_env/idf6.0_py3.12_env/bin/python /home/marcos/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/marcos/esp/kyber-esp32/build/partition_table/partition-table.bin /home/marcos/esp/kyber-esp32/build/kyber-esp32.bin
kyber-esp32.bin binary size 0x2fd00 bytes. Smallest app partition is 0x100000 bytes. 0xd0300 bytes (81%) free.
