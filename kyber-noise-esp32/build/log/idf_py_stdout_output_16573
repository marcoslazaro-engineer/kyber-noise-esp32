Command: ninja all
[1/9] Performing build step for 'bootloader'
[1/1] cd /home/marcos/esp/kyber-esp32/build/bootloader && /home/marcos/.espressif/python_env/idf6.0_py3.12_env/bin/python /home/marcos/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/marcos/esp/kyber-esp32/build/bootloader/bootloader.bin
Bootloader binary size 0x5250 bytes. 0x2db0 bytes (36%) free.
[2/9] No install step for 'bootloader'
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/hello.c.obj
[4/9] Linking C static library esp-idf/main/libmain.a
[5/9] Completed 'bootloader'
[6/9] Generating esp-idf/esp_system/ld/sections.ld
[7/9] Linking CXX executable kyber-esp32.elf
[8/9] Generating binary image from built executable
esptool.py v4.9.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/marcos/esp/kyber-esp32/build/kyber-esp32.bin
[9/9] cd /home/marcos/esp/kyber-esp32/build && /home/marcos/.espressif/python_env/idf6.0_py3.12_env/bin/python /home/marcos/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/marcos/esp/kyber-esp32/build/partition_table/partition-table.bin /home/marcos/esp/kyber-esp32/build/kyber-esp32.bin
kyber-esp32.bin binary size 0x2fd60 bytes. Smallest app partition is 0x100000 bytes. 0xd02a0 bytes (81%) free.
